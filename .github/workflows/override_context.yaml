name: Reply Based on Previous Comment

on:
  issue_comment:
    types: [created]

jobs:
  reply:
    runs-on: ubuntu-latest
    steps:
      - name: Find target comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          TRIGGERING_COMMENT_BODY: ${{ github.event.comment.body }}
        run: |
          TARGET_COMMENT_ID=""
          TARGET_COMMENT_BODY=""
          COMMENT_PATTERN1="/retest-required"
          COMMENT_PATTERN2="Remaining retests:"
          if [[ "$TRIGGERING_COMMENT_BODY" =~ $COMMENT_PATTERN1 ]] && [[ "$TRIGGERING_COMMENT_BODY" =~ $COMMENT_PATTERN2 ]]; then
            echo "Fetching comments for issue: ${ISSUE_NUMBER}"
            response=$(curl -s -H "Accept: application/vnd.github+json" "https://api.github.com/repos/openshift/assisted-image-service/issues/${ISSUE_NUMBER}/comments")
            readarray -t my_array < <(echo "${response}" | jq --compact-output '.[]')
            for comment in "${my_array[@]}"; do
              COMMENT_BODY=$(echo "$comment" | jq -r .body) || COMMENT_BODY=""
              if [[ "$COMMENT_BODY" == "/test remaining-required"*"Overriding unmatched contexts:"*"/override"* ]]; then
                echo "Found target comment with the message: $COMMENT_BODY"
                TARGET_COMMENT_BODY="${COMMENT_BODY}"
              fi
            done

            if [[ -n "$TARGET_COMMENT_BODY" ]]; then
              TARGET_REPLY_BODY=$(echo "${TARGET_COMMENT_BODY}" | grep "/override")
              TARGET_REPLY="{\"body\":\"${TARGET_REPLY_BODY}\"}"
              curl -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: token ${GITHUB_TOKEN}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/openshift/assisted-image-service/issues/${ISSUE_NUMBER}/comments   -d "${TARGET_REPLY}"
            else
              echo "Cannot identify the override context"
            fi
          else
            echo "Comment does not match the pattern. Exiting."
          fi
