// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/openshift/assisted-image-service/pkg/isoeditor (interfaces: IsoutilInterface)

// Package isoeditor is a generated GoMock package.
package isoeditor

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIsoutilInterface is a mock of IsoutilInterface interface.
type MockIsoutilInterface struct {
	ctrl     *gomock.Controller
	recorder *MockIsoutilInterfaceMockRecorder
}

// MockIsoutilInterfaceMockRecorder is the mock recorder for MockIsoutilInterface.
type MockIsoutilInterfaceMockRecorder struct {
	mock *MockIsoutilInterface
}

// NewMockIsoutilInterface creates a new mock instance.
func NewMockIsoutilInterface(ctrl *gomock.Controller) *MockIsoutilInterface {
	mock := &MockIsoutilInterface{ctrl: ctrl}
	mock.recorder = &MockIsoutilInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIsoutilInterface) EXPECT() *MockIsoutilInterfaceMockRecorder {
	return m.recorder
}

// CreateNmstateWorkdir mocks base method.
func (m *MockIsoutilInterface) CreateNmstateWorkdir(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNmstateWorkdir", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNmstateWorkdir indicates an expected call of CreateNmstateWorkdir.
func (mr *MockIsoutilInterfaceMockRecorder) CreateNmstateWorkdir(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNmstateWorkdir", reflect.TypeOf((*MockIsoutilInterface)(nil).CreateNmstateWorkdir), arg0)
}
