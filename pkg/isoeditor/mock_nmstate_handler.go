// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/openshift/assisted-image-service/pkg/isoeditor (interfaces: NmstateHandler)

// Package isoeditor is a generated GoMock package.
package isoeditor

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockNmstateHandler is a mock of NmstateHandler interface.
type MockNmstateHandler struct {
	ctrl     *gomock.Controller
	recorder *MockNmstateHandlerMockRecorder
}

// MockNmstateHandlerMockRecorder is the mock recorder for MockNmstateHandler.
type MockNmstateHandlerMockRecorder struct {
	mock *MockNmstateHandler
}

// NewMockNmstateHandler creates a new mock instance.
func NewMockNmstateHandler(ctrl *gomock.Controller) *MockNmstateHandler {
	mock := &MockNmstateHandler{ctrl: ctrl}
	mock.recorder = &MockNmstateHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNmstateHandler) EXPECT() *MockNmstateHandlerMockRecorder {
	return m.recorder
}

// CreateNmstateRamDisk mocks base method.
func (m *MockNmstateHandler) CreateNmstateRamDisk(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNmstateRamDisk", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateNmstateRamDisk indicates an expected call of CreateNmstateRamDisk.
func (mr *MockNmstateHandlerMockRecorder) CreateNmstateRamDisk(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNmstateRamDisk", reflect.TypeOf((*MockNmstateHandler)(nil).CreateNmstateRamDisk), arg0, arg1)
}
